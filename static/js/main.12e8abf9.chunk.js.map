{"version":3,"sources":["components/Tile.jsx","utils/utils.js","components/Counter.jsx","components/SmileyButton.jsx","components/Timer.jsx","components/Indicator.jsx","components/Minesweeper.jsx","components/DropdownMenu.jsx","App.js","index.js"],"names":["getClasses","hidden","classes","hasFlag","Tile","onClick","gameState","onContextMenu","className","disabled","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","Counter","count","SmileyButton","Timer","useState","seconds","setSeconds","useEffect","interval","setInterval","clearInterval","Indicator","flags","time","onReset","Minesweeper","props","state","tiles","hiddenTilesCount","handleClick","tile","setState","hasMine","gameOver","pos","floodFill","x","y","countHiddenFields","difficulty","mines","handleRightClick","e","preventDefault","handleReset","initialState","initBoard","counter","prevProps","prevState","this","map","row","index","size","Array","keys","indexes","slice","push","undefined","find","i","j","countSurroundingMines","cell","numOfMines","x_offset","y_offset","prevCount","trigger","revealMines","Component","DropdownMenu","onMenuItemClick","levels","App","setDifficulty","Fragment","id","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12e8abf9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Tile = ({\r\n  classes,\r\n  hidden,\r\n  onClick,\r\n  gameState,\r\n  onContextMenu,\r\n  hasFlag,\r\n}) => {\r\n  return (\r\n    <button\r\n      className={getClasses(hidden, classes, hasFlag)}\r\n      onClick={onClick}\r\n      disabled={gameState === \"win\" || gameState === \"dead\"}\r\n      onContextMenu={onContextMenu}\r\n    ></button>\r\n  );\r\n};\r\n\r\nconst getClasses = (hidden, classes, hasFlag) => {\r\n  if (hasFlag && hidden) return \"cell flag\";\r\n  if (!hidden) return classes;\r\n  return \"cell\";\r\n};\r\n\r\nexport default Tile;\r\n","function shuffle(array) {\r\n  var currentIndex = array.length,\r\n    temporaryValue,\r\n    randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n\r\n    // And swap it with the current element.\r\n    temporaryValue = array[currentIndex];\r\n    array[currentIndex] = array[randomIndex];\r\n    array[randomIndex] = temporaryValue;\r\n  }\r\n  return array;\r\n}\r\n\r\nexport default shuffle;\r\n","import React from \"react\";\r\n\r\nconst Counter = ({ count, classes }) => {\r\n  return (\r\n    <div className={classes}>\r\n      <span className={`count n${Math.floor(count / 100)}`} />\r\n      <span className={`count n${Math.floor(count / 10)}`} />\r\n      <span className={`count n${count % 10}`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\n\r\nfunction SmileyButton({ onClick, gameState }) {\r\n  return <button className={`smiley ${gameState}`} onClick={onClick} />;\r\n}\r\n\r\nexport default SmileyButton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Counter from \"./Counter\";\r\n\r\nconst Timer = ({ gameState }) => {\r\n  const [seconds, setSeconds] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (gameState === \"\") setSeconds(0);\r\n    if (gameState === \"dead\" || gameState === \"win\") return;\r\n    const interval = setInterval(() => {\r\n      if (gameState === \"started\") setSeconds((seconds) => seconds + 1);\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [gameState]);\r\n\r\n  return <Counter count={seconds} classes={\"time\"} />;\r\n};\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport Counter from \"./Counter\";\r\nimport SmileyButton from \"./SmileyButton\";\r\nimport Timer from \"./Timer\";\r\n\r\nfunction Indicator({ flags, time, onReset, gameState }) {\r\n  return (\r\n    <div className=\"indicator\">\r\n      <Counter count={flags} classes=\"flags-counter\" />\r\n      <SmileyButton onClick={onReset} gameState={gameState} />\r\n      <Timer count={time} classes=\"time\" gameState={gameState} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Indicator;\r\n","import React, { Component } from \"react\";\r\nimport Tile from \"./Tile\";\r\nimport shuffle from \"../utils/utils\";\r\nimport Indicator from \"./Indicator\";\r\n\r\nclass Minesweeper extends Component {\r\n  state = {\r\n    tiles: [],\r\n    hiddenTilesCount: 0,\r\n    time: 0,\r\n    flags: 0,\r\n    gameState: \"\",\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state.tiles = this.initBoard();\r\n    this.state.hiddenTilesCount = this.props.difficulty.counter;\r\n    this.state.flags = this.props.difficulty.mines;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps !== this.props) this.handleReset();\r\n  }\r\n\r\n  handleClick = (tile) => {\r\n    if (this.state.gameState === \"\") this.setState({ gameState: \"started\" });\r\n    if (tile.hasFlag) return;\r\n    if (tile.hasMine) return this.gameOver(tile.pos);\r\n    this.floodFill(tile.pos.x, tile.pos.y, 0);\r\n    if (this.countHiddenFields() === this.props.difficulty.mines)\r\n      this.setState({ gameState: \"win\" });\r\n  };\r\n\r\n  handleRightClick = (e, tile) => {\r\n    e.preventDefault();\r\n    const flags = this.state.flags;\r\n\r\n    if (!tile.hidden || (flags === 0 && !tile.hasFlag)) return;\r\n\r\n    const tiles = [...this.state.tiles];\r\n\r\n    if (tile.hasFlag) {\r\n      tiles[tile.pos.x][tile.pos.y].hasFlag = false;\r\n      this.setState({ flags: flags + 1 });\r\n    } else {\r\n      tiles[tile.pos.x][tile.pos.y].hasFlag = true;\r\n      this.setState({ flags: flags - 1 });\r\n    }\r\n\r\n    this.setState({ tiles });\r\n  };\r\n\r\n  handleReset = () => {\r\n    const tiles = this.initBoard();\r\n    const initialState = {\r\n      tiles,\r\n      hiddenTilesCount: this.props.difficulty.count,\r\n      time: 0,\r\n      flags: this.props.difficulty.mines,\r\n      gameState: \"\",\r\n    };\r\n    this.setState(initialState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"minesweeper\">\r\n        <Indicator\r\n          flags={this.state.flags}\r\n          time={this.state.time}\r\n          onReset={this.handleReset}\r\n          gameState={this.state.gameState}\r\n        />\r\n        <div className=\"board\">\r\n          {this.state.tiles.map((row, index) => (\r\n            <div className=\"row\" key={index}>\r\n              {row.map((tile) => (\r\n                <Tile\r\n                  key={tile.pos.x * 10 + tile.pos.y}\r\n                  classes={tile.classes}\r\n                  hidden={tile.hidden}\r\n                  onClick={() => this.handleClick(tile)}\r\n                  gameState={this.state.gameState}\r\n                  onContextMenu={(e) => this.handleRightClick(e, tile)}\r\n                  hasFlag={tile.hasFlag}\r\n                />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  initBoard() {\r\n    const tiles = [];\r\n    const size = this.props.difficulty.size;\r\n    const array = [...Array(this.props.difficulty.count).keys()];\r\n    const indexes = shuffle(array).slice(0, this.props.difficulty.mines);\r\n\r\n    for (let x = 0; x < size.x; x++) {\r\n      let row = [];\r\n      for (let y = 0; y < size.y; y++) {\r\n        row.push({\r\n          pos: { x, y },\r\n          hasMine:\r\n            indexes.find((index) => index === x * size.x + y) !== undefined,\r\n          hasFlag: false,\r\n          classes: \"cell\",\r\n          hidden: true,\r\n        });\r\n      }\r\n      tiles.push(row);\r\n    }\r\n\r\n    for (let i = 0; i < size.x; i++) {\r\n      for (let j = 0; j < size.y; j++) {\r\n        if (tiles[i][j].hasMine) tiles[i][j].classes += \" mine\";\r\n        else\r\n          tiles[i][j].classes += ` n${this.countSurroundingMines(\r\n            tiles[i][j],\r\n            tiles\r\n          )}`;\r\n      }\r\n    }\r\n\r\n    return tiles;\r\n  }\r\n\r\n  countSurroundingMines(cell, tiles) {\r\n    const size = this.props.difficulty.size;\r\n\r\n    let numOfMines = 0;\r\n    for (let x_offset = -1; x_offset <= 1; x_offset++) {\r\n      for (let y_offset = -1; y_offset <= 1; y_offset++) {\r\n        if (\r\n          cell.pos.x + x_offset >= 0 &&\r\n          cell.pos.y + y_offset >= 0 &&\r\n          cell.pos.x + x_offset < size.x &&\r\n          cell.pos.y + y_offset < size.y\r\n        ) {\r\n          if (tiles[cell.pos.x + x_offset][cell.pos.y + y_offset].hasMine)\r\n            numOfMines++;\r\n        }\r\n      }\r\n    }\r\n    return numOfMines;\r\n  }\r\n\r\n  floodFill(x, y, prevCount) {\r\n    const tiles = [...this.state.tiles];\r\n    const size = this.props.difficulty.size;\r\n    if (\r\n      x >= 0 &&\r\n      x < size.x &&\r\n      y >= 0 &&\r\n      y < size.y &&\r\n      tiles[x][y].hidden &&\r\n      prevCount === 0\r\n    ) {\r\n      if (!tiles[x][y].hasMine && !tiles[x][y].hasFlag) {\r\n        tiles[x][y].hidden = false;\r\n        let count = this.countSurroundingMines(tiles[x][y], tiles);\r\n        this.floodFill(x - 1, y, count);\r\n        this.floodFill(x + 1, y, count);\r\n        this.floodFill(x, y - 1, count);\r\n        this.floodFill(x, y + 1, count);\r\n      }\r\n    }\r\n    this.setState({ tiles });\r\n  }\r\n\r\n  countHiddenFields() {\r\n    const size = this.props.difficulty.size;\r\n    let count = 0;\r\n    for (let x = 0; x < size.x; x++)\r\n      for (let y = 0; y < size.y; y++)\r\n        if (this.state.tiles[x][y].hidden) count++;\r\n\r\n    return count;\r\n  }\r\n\r\n  gameOver(trigger) {\r\n    this.revealMines(trigger);\r\n    this.setState({ gameState: \"dead\" });\r\n  }\r\n\r\n  revealMines(trigger) {\r\n    const tiles = [...this.state.tiles];\r\n    const size = this.props.difficulty.size;\r\n    for (let x = 0; x < size.x; x++) {\r\n      for (let y = 0; y < size.y; y++) {\r\n        if (!tiles[x][y].hasFlag && tiles[x][y].hasMine)\r\n          tiles[x][y].hidden = false;\r\n        if (tiles[x][y].hasFlag && !tiles[x][y].hasMine) {\r\n          tiles[x][y].hidden = false;\r\n          tiles[x][y].classes += \" dead-flag\";\r\n        }\r\n        if (x === trigger.x && y === trigger.y)\r\n          tiles[x][y].classes += \" triggeredDeath\";\r\n      }\r\n    }\r\n    this.setState({ tiles });\r\n  }\r\n}\r\n\r\nexport default Minesweeper;\r\n","import React from \"react\";\r\nimport \"../Minesweeper.css\";\r\n\r\nfunction DropdownMenu({ onMenuItemClick }) {\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <button className=\"dropdown-btn\">Difficulty</button>\r\n      <div className=\"dropdown-content\">\r\n        <button onClick={() => onMenuItemClick(\"beginner\")}>Beginner</button>\r\n        <button onClick={() => onMenuItemClick(\"intermediate\")}>\r\n          Intermediate\r\n        </button>\r\n        <button onClick={() => onMenuItemClick(\"advanced\")}>Advanced</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropdownMenu;\r\n","import React, { useState } from \"react\";\nimport Minesweeper from \"./components/Minesweeper\";\nimport DropdownMenu from \"./components/DropdownMenu\";\nimport \"./Minesweeper.css\";\n\nconst levels = {\n  beginner: {\n    mines: 10,\n    size: { x: 9, y: 9 },\n    count: 81,\n  },\n  intermediate: {\n    mines: 40,\n    size: { x: 16, y: 16 },\n    count: 256,\n  },\n  advanced: {\n    mines: 99,\n    size: { x: 16, y: 32 },\n    count: 512,\n  },\n};\n\nfunction App() {\n  const [difficulty, setDifficulty] = useState(levels.intermediate);\n\n  const handleMenuItemClick = (id) => {\n    if (id === \"beginner\") {\n      setDifficulty(levels.beginner);\n    } else if (id === \"intermediate\") {\n      setDifficulty(levels.intermediate);\n    } else if (id === \"advanced\") {\n      setDifficulty(levels.advanced);\n    }\n    console.log(difficulty);\n  };\n\n  return (\n    <React.Fragment>\n      <DropdownMenu onMenuItemClick={handleMenuItemClick} />\n      <Minesweeper key={difficulty} difficulty={difficulty} />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}